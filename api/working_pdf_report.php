<?php
require_once 'config.php';

// Working PDF generation with proper content
function generateWorkingPDF($programs, $reportType, $startDate, $endDate) {
    // Debug: Log the programs data
    error_log("PDF Generation - Number of programs: " . count($programs));
    error_log("PDF Generation - Programs data: " . json_encode($programs));
    
    // Create a simple but working PDF structure
    $pdf = "%PDF-1.4\n";
    $pdf .= "1 0 obj\n";
    $pdf .= "<<\n";
    $pdf .= "/Type /Catalog\n";
    $pdf .= "/Pages 2 0 R\n";
    $pdf .= ">>\n";
    $pdf .= "endobj\n";
    
    $pdf .= "2 0 obj\n";
    $pdf .= "<<\n";
    $pdf .= "/Type /Pages\n";
    $pdf .= "/Kids [3 0 R]\n";
    $pdf .= "/Count 1\n";
    $pdf .= ">>\n";
    $pdf .= "endobj\n";
    
    // Create the page content
    $content = "BT\n";
    $content .= "/F1 16 Tf\n";
    $content .= "50 750 Td\n";
    $content .= "(KEDAH STATE GOVERNMENT) Tj\n";
    $content .= "0 -25 Td\n";
    $content .= "/F1 14 Tf\n";
    $content .= "(PROGRAM MANAGEMENT SYSTEM) Tj\n";
    $content .= "0 -30 Td\n";
    $content .= "/F1 18 Tf\n";
    $content .= "(" . strtoupper($reportType) . " PROGRAMS REPORT) Tj\n";
    $content .= "0 -40 Td\n";
    
    // Report info
    $content .= "/F1 10 Tf\n";
    $content .= "(Generated: " . date('d-m-Y H:i:s') . ") Tj\n";
    $content .= "0 -20 Td\n";
    
    // Summary
    $totalBudget = array_sum(array_column($programs, 'budget'));
    $content .= "/F1 12 Tf\n";
    $content .= "(SUMMARY) Tj\n";
    $content .= "0 -20 Td\n";
    $content .= "/F1 10 Tf\n";
    $content .= "(Total Programs: " . count($programs) . ") Tj\n";
    $content .= "0 -15 Td\n";
    $content .= "(Total Budget: RM " . number_format($totalBudget, 0) . ") Tj\n";
    $content .= "0 -30 Td\n";
    
    // Table header
    $content .= "/F1 11 Tf\n";
    $content .= "(PROGRAM DETAILS) Tj\n";
    $content .= "0 -25 Td\n";
    
    // Draw table border
    $content .= "50 600 m\n";
    $content .= "550 600 l\n";
    $content .= "550 100 l\n";
    $content .= "50 100 l\n";
    $content .= "50 600 l\n";
    $content .= "S\n";
    
    // Table headers
    $content .= "/F1 10 Tf\n";
    $content .= "60 580 Td\n";
    $content .= "(NO) Tj\n";
    $content .= "50 0 Td\n";
    $content .= "(TITLE) Tj\n";
    $content .= "150 0 Td\n";
    $content .= "(STATUS) Tj\n";
    $content .= "80 0 Td\n";
    $content .= "(BUDGET) Tj\n";
    $content .= "80 0 Td\n";
    $content .= "(DATE) Tj\n";
    $content .= "0 -20 Td\n";
    
    // Draw header line
    $content .= "50 560 m\n";
    $content .= "550 560 l\n";
    $content .= "S\n";
    
    // Programs data - Fixed positioning with proper text rendering
    $y = 540;
    $rowCount = 0;
    foreach ($programs as $index => $program) {
        if ($y < 120) break; // Prevent overflow
        
        // Debug: Log each program
        error_log("Processing program " . ($index + 1) . ": " . json_encode($program));
        
        // Row 1: Number - Use absolute positioning
        $content .= "/F1 9 Tf\n";
        $content .= "60 " . $y . " Td\n";
        $content .= "(" . ($index + 1) . ") Tj\n";
        
        // Row 2: Title - Use absolute positioning
        $title = isset($program['title']) ? $program['title'] : 'No Title';
        $title = substr($title, 0, 25);
        $content .= "110 " . $y . " Td\n";
        $content .= "(" . $title . ") Tj\n";
        
        // Row 3: Status - Use absolute positioning
        $status = isset($program['status']) ? strtoupper($program['status']) : 'UNKNOWN';
        $content .= "260 " . $y . " Td\n";
        $content .= "(" . $status . ") Tj\n";
        
        // Row 4: Budget - Use absolute positioning
        $budget = isset($program['budget']) ? number_format($program['budget'], 0) : '0';
        $content .= "340 " . $y . " Td\n";
        $content .= "(RM " . $budget . ") Tj\n";
        
        // Row 5: Date - Use absolute positioning
        $date = isset($program['created_at']) ? date('d/m/Y', strtotime($program['created_at'])) : 'N/A';
        $content .= "420 " . $y . " Td\n";
        $content .= "(" . $date . ") Tj\n";
        
        // Draw row line
        $content .= "50 " . ($y - 10) . " m\n";
        $content .= "550 " . ($y - 10) . " l\n";
        $content .= "S\n";
        
        $y -= 20;
        $rowCount++;
    }
    
    // If no programs found, show a message
    if ($rowCount === 0) {
        $content .= "/F1 10 Tf\n";
        $content .= "60 " . $y . " Td\n";
        $content .= "(No programs found for this report type) Tj\n";
        $content .= "0 -15 Td\n";
    }
    
    // Footer
    $content .= "0 -30 Td\n";
    $content .= "/F1 10 Tf\n";
    $content .= "(Generated by Kedah State Government Program Management System) Tj\n";
    $content .= "0 -15 Td\n";
    $content .= "(For official use only) Tj\n";
    
    $content .= "ET\n";
    
    $pdf .= "3 0 obj\n";
    $pdf .= "<<\n";
    $pdf .= "/Type /Page\n";
    $pdf .= "/Parent 2 0 R\n";
    $pdf .= "/MediaBox [0 0 612 792]\n";
    $pdf .= "/Contents 4 0 R\n";
    $pdf .= ">>\n";
    $pdf .= "endobj\n";
    
    $pdf .= "4 0 obj\n";
    $pdf .= "<<\n";
    $pdf .= "/Length " . strlen($content) . "\n";
    $pdf .= ">>\n";
    $pdf .= "stream\n";
    $pdf .= $content;
    $pdf .= "endstream\n";
    $pdf .= "endobj\n";
    
    $pdf .= "xref\n";
    $pdf .= "0 5\n";
    $pdf .= "0000000000 65535 f \n";
    $pdf .= "0000000009 00000 n \n";
    $pdf .= "0000000058 00000 n \n";
    $pdf .= "0000000115 00000 n \n";
    $pdf .= "0000000250 00000 n \n";
    $pdf .= "trailer\n";
    $pdf .= "<<\n";
    $pdf .= "/Size 5\n";
    $pdf .= "/Root 1 0 R\n";
    $pdf .= ">>\n";
    $pdf .= "startxref\n";
    $pdf .= (strlen($pdf) - 1) . "\n";
    $pdf .= "%%EOF\n";
    
    return $pdf;
}

// Handle the report generation
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        $pdo = getConnection();
        
        $input = json_decode(file_get_contents('php://input'), true);
        $reportType = $input['reportType'] ?? 'all';
        $startDate = $input['startDate'] ?? '';
        $endDate = $input['endDate'] ?? '';
        
        // Debug: Log the input parameters
        error_log("PDF Report Request - Type: $reportType, Start: $startDate, End: $endDate");
        
        // Build the SQL query based on report type
        $whereConditions = [];
        $params = [];
        
        if ($reportType === 'approved') {
            $whereConditions[] = "p.status = 'approved'";
        } elseif ($reportType === 'rejected') {
            $whereConditions[] = "p.status = 'rejected'";
        }
        
        if ($startDate) {
            $whereConditions[] = "p.created_at >= ?";
            $params[] = $startDate . ' 00:00:00';
        }
        
        if ($endDate) {
            $whereConditions[] = "p.created_at <= ?";
            $params[] = $endDate . ' 23:59:59';
        }
        
        $whereClause = '';
        if (!empty($whereConditions)) {
            $whereClause = " WHERE " . implode(" AND ", $whereConditions);
        }
        
        $sql = "
            SELECT p.*, u.name as user_name, u.role as user_role,
                   a.name as approver_name, r.name as rejector_name
            FROM programs p 
            LEFT JOIN users u ON p.user_id = u.id 
            LEFT JOIN users a ON p.approved_by = a.id
            LEFT JOIN users r ON p.rejected_by = r.id
            {$whereClause}
            ORDER BY p.created_at DESC
        ";
        
        // Debug: Log the SQL query
        error_log("PDF Report SQL: $sql");
        error_log("PDF Report Params: " . json_encode($params));
        
        $stmt = $pdo->prepare($sql);
        $stmt->execute($params);
        $programs = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        // Debug: Log the results
        error_log("PDF Report - Found " . count($programs) . " programs");
        
        // Generate working PDF
        $pdfContent = generateWorkingPDF($programs, $reportType, $startDate, $endDate);
        
        // Set headers for PDF download
        header('Content-Type: application/pdf');
        header('Content-Disposition: attachment; filename="' . $reportType . '_programs_report_' . date('Y-m-d_H-i-s') . '.pdf"');
        header('Content-Length: ' . strlen($pdfContent));
        
        echo $pdfContent;
        
    } catch (Exception $e) {
        error_log("Error generating working PDF report: " . $e->getMessage());
        http_response_code(500);
        echo json_encode(['error' => 'Failed to generate PDF report']);
    }
} else {
    http_response_code(405);
    echo json_encode(['error' => 'Method not allowed']);
}
?> 